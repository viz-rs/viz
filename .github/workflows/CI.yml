name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  test:
    name: cargo test (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        # --no-self-update is necessary because the windows environment cannot self-update rustup.exe.
        run: rustup update nightly --no-self-update && rustup default nightly
      - run: cargo test --workspace --all --verbose
      - run: cargo test --workspace --all --verbose --release --manifest-path examples/Cargo.toml
      - run: cargo build --workspace --all --verbose --release --manifest-path examples/Cargo.toml
      - name: Show Examples Release files
        if: matrix.os != 'windows-latest'
        run: ls -la examples/target/release

  clippy:
    name: cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup toolchain install nightly --component clippy && rustup default nightly
      - run: cargo clippy --workspace --all-targets
      - run: cargo clippy --workspace --all-targets --manifest-path examples/Cargo.toml

  fmt:
    name: cargo fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update stable
      - run: cargo fmt --all -- --check
      - run: cargo fmt --all --manifest-path examples/Cargo.toml -- --check

  docs:
    name: cargo doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        run: rustup update nightly && rustup default nightly
      - run: RUSTDOCFLAGS="-D warnings --cfg docsrs" cargo doc --workspace --no-deps
